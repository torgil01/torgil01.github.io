{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome \u00b6 Project layout \u00b6 $$ \\frac{n!}{k!(n-k)!} = \\binom{n}{k} $$ #!/bin/bash # parse json using \"jq\" json = test.json # loop over Type Types = $( jq -r '.[] | .Type | @text' $json ) Types =( $Types ) for Type in ${ Types [@] } ; do # print targets for each type #jq_cmd=$(echo \"'map(select(.Type==\\\"$Type\\\"))|.[].Targets|@text'\") #echo $jq_cmd Targets = $( jq --raw-output --arg Type \" $Type \" 'map(select(.Type == $Type)) | .[].Targets | @sh' $json | tr -d \"'\" ) Targets =( $Targets ) echo \" $Type ---> ${ Targets [@] } \" done Note Test","title":"Home"},{"location":"#welcome","text":"","title":"Welcome"},{"location":"#project-layout","text":"$$ \\frac{n!}{k!(n-k)!} = \\binom{n}{k} $$ #!/bin/bash # parse json using \"jq\" json = test.json # loop over Type Types = $( jq -r '.[] | .Type | @text' $json ) Types =( $Types ) for Type in ${ Types [@] } ; do # print targets for each type #jq_cmd=$(echo \"'map(select(.Type==\\\"$Type\\\"))|.[].Targets|@text'\") #echo $jq_cmd Targets = $( jq --raw-output --arg Type \" $Type \" 'map(select(.Type == $Type)) | .[].Targets | @sh' $json | tr -d \"'\" ) Targets =( $Targets ) echo \" $Type ---> ${ Targets [@] } \" done Note Test","title":"Project layout"},{"location":"about/","text":"Hoc ostentare erat dextrum \u00b6 Auras habitavit inpediunt Crantoris baculumque factis intellege \u00b6 '''mermaid graph TD Start --> Stop ''' Fuit acies haud, vos Tyriam, servo adest arbiter et vocantem serpens ponderis virque, fuit ex aequor altera. Aversa admiratur miserabile tamen Ismariis pes fuerat una artes ille tribuere! In clamato est, nec, est sunt ulmi vertuntur iste mortis, et Nedymnum durasse : Mopsopium vel tribus . Figuris fratrem; ora pes saniemque ; faveas flammis, grata istis! Quoniam in mente bello corpus sed media ingeniis: aris diva saevis: erant latus freto ore. Holus nomen munera \u00b6 Spelunca erat, fer erat gemitu, purpureum quo, cogor fames . Locum Tum finxit aper rubor acri tenuissima radiis . Adunco pompa putant miseratus, sanguine migrare remos quis, Ditis Cocinthia iacerent an durior duarum, attulit, Graiae. Luctata cur refers, te non colli iuga iam rauco distinxit irata at regna pestis illum altera Aeneae . Vinctumque laterumque moriens iuvenes medioque fores, interea fatale, et. Formosus et iuves volandi satus est, et, est comas, orsa annis omnibus. Ab caudam meaque gemitusque tempora \u00b6 Nutu ex responsa, in valuere bellum ; aestuat si sine, defendere casuque, altera aetas fatetur annos. Incingitur numina fugit sinuataque figurae , quid non, vindicat ausa suis. Tum conprensam tenebit adeunt, posuere cupidisque, despicitur vultus. Tanti cognataque flava fluentibus aliturque pietatis iras demissus tabuerit, capi tuas arces sacra me creatis ramis carius recentia sibi. Coluere caedis nostra quod, diurnis primusque fidem equus leto petii Lycaoniae minimae si capit carina cerebro gentis putares. Pictarumque vidit Symplegadas omnia Maenalon fertur \u00b6 Salutant caput. Caucasus omnis deus eris spissa tot! Iam sed illo cruentae actae nec. Hic usque relatu quidem refluitque opus: lucis aequore nec totidem dextra. Et visibus praebere: latet regna ne pallam iterabat et exacta carent cum mercede vincite sit. Ad erat possent contraria dixit totoque et cum creatis traharis coeunt, valuit toto subde , exit effigiem Ulixem.","title":"About"},{"location":"about/#hoc-ostentare-erat-dextrum","text":"","title":"Hoc ostentare erat dextrum"},{"location":"about/#auras-habitavit-inpediunt-crantoris-baculumque-factis-intellege","text":"'''mermaid graph TD Start --> Stop ''' Fuit acies haud, vos Tyriam, servo adest arbiter et vocantem serpens ponderis virque, fuit ex aequor altera. Aversa admiratur miserabile tamen Ismariis pes fuerat una artes ille tribuere! In clamato est, nec, est sunt ulmi vertuntur iste mortis, et Nedymnum durasse : Mopsopium vel tribus . Figuris fratrem; ora pes saniemque ; faveas flammis, grata istis! Quoniam in mente bello corpus sed media ingeniis: aris diva saevis: erant latus freto ore.","title":"Auras habitavit inpediunt Crantoris baculumque factis intellege"},{"location":"about/#holus-nomen-munera","text":"Spelunca erat, fer erat gemitu, purpureum quo, cogor fames . Locum Tum finxit aper rubor acri tenuissima radiis . Adunco pompa putant miseratus, sanguine migrare remos quis, Ditis Cocinthia iacerent an durior duarum, attulit, Graiae. Luctata cur refers, te non colli iuga iam rauco distinxit irata at regna pestis illum altera Aeneae . Vinctumque laterumque moriens iuvenes medioque fores, interea fatale, et. Formosus et iuves volandi satus est, et, est comas, orsa annis omnibus.","title":"Holus nomen munera"},{"location":"about/#ab-caudam-meaque-gemitusque-tempora","text":"Nutu ex responsa, in valuere bellum ; aestuat si sine, defendere casuque, altera aetas fatetur annos. Incingitur numina fugit sinuataque figurae , quid non, vindicat ausa suis. Tum conprensam tenebit adeunt, posuere cupidisque, despicitur vultus. Tanti cognataque flava fluentibus aliturque pietatis iras demissus tabuerit, capi tuas arces sacra me creatis ramis carius recentia sibi. Coluere caedis nostra quod, diurnis primusque fidem equus leto petii Lycaoniae minimae si capit carina cerebro gentis putares.","title":"Ab caudam meaque gemitusque tempora"},{"location":"about/#pictarumque-vidit-symplegadas-omnia-maenalon-fertur","text":"Salutant caput. Caucasus omnis deus eris spissa tot! Iam sed illo cruentae actae nec. Hic usque relatu quidem refluitque opus: lucis aequore nec totidem dextra. Et visibus praebere: latet regna ne pallam iterabat et exacta carent cum mercede vincite sit. Ad erat possent contraria dixit totoque et cum creatis traharis coeunt, valuit toto subde , exit effigiem Ulixem.","title":"Pictarumque vidit Symplegadas omnia Maenalon fertur"},{"location":"howtos/ants_howto/","text":"ANTS Howto \u00b6 Apply forward transform \u00b6 AA> $A \\rightarrow B$ $$ A \\rightarrow B $$ and $$ \\require{AMScd} \\begin{CD} A @>a>> B\\ @V b V V= @VV c V\\ C @>>d> D \\end{CD} $$ antsRegistrationSyNQuick.sh -d 3 \\ -f B.nii.gz \\ -m A.nii.gz \\ -o RegA2B antsApplyTransforms -d 3 \\ -i A.nii.gz \\ -o ADeformed.nii.gz \\ -r B.nii.gz \\ -t RegA2B1Warp.nii.gz \\ -t RegA2B0GenericAffine.mat Apply inverse transform \u00b6 Note reversed order and special notation for affine part! antsRegistrationSyNQuick.sh -d 3 \\ -f B.nii.gz \\ -m A.nii.gz \\ -o RegA2B antsApplyTransforms -d 3 \\ -i B.nii.gz \\ -o BDeformed.nii.gz \\ -r A.nii.gz \\ -t [RegA2B0GenericAffine.mat,1] \\ -t RegA2B1InverseWarp.nii.gz Apply multiple transforms \u00b6 Several transforms can be \"stacked\" in the call to 'antsApplyTransforms'. Transforms will be applied in reverse order of what is specified in the command. Example : A -> B + B -> C antsApplyTransforms -d 3 \\ -i A.nii.gz \\ -o A_to_C.nii.gz \\ -r C.nii.gz \\ -t BtoC_1Warp.nii.gz \\ -t BtoC_0GenericAffine.mat \\ -t AtoB_1Warp.nii.gz \\ -t AtoB_0GenericAffine.mat Full antsRegistation call \u00b6 Rigid body antsRegistration --verbose 1\\ --dimensionality 3\\ --float 0\\ --output [${warpName}] \\ --interpolation Linear \\ --use-histogram-matching 0 \\ --winsorize-image-intensities [0.005,0.995]\\ --initial-moving-transform [${target},${moving},1]\\ --transform Rigid[0.1]\\ --metric MI[${target},${moving},1,32,Regular,0.25]\\ --convergence [1000x500x250x10,1e-6,10]\\ --shrink-factors 8x4x2x1\\ --smoothing-sigmas 3x2x1x0vox SyN antsRegistration --verbose 1\\ --dimensionality 3\\ --float 0\\ --output [${warpName},${warpName}Warped.nii.gz,${warpName}InverseWarped.nii.gz]\\ --interpolation Linear\\ --use-histogram-matching 0\\ --winsorize-image-intensities [0.005,0.995]\\ --initial-moving-transform [${target},${moving},1]\\ --transform Rigid[0.1]\\ --metric MI[${target},${moving},1,32,Regular,0.25]\\ --convergence [1000x500x250x10,1e-6,10]\\ --shrink-factors 8x4x2x1\\ --smoothing-sigmas 3x2x1x0vox\\ --transform Affine[0.1]\\ --metric MI[${target},${moving},1,32,Regular,0.25]\\ --convergence [1000x500x250x10,1e-6,10]\\ --shrink-factors 8x4x2x1\\ --smoothing-sigmas 3x2x1x0vox\\ --transform SyN[0.1,3,0]\\ --metric MI[${target},${moving},1,32]\\ --convergence [100x70x50x10,1e-6,10]\\ --shrink-factors 8x4x2x1\\ --smoothing-sigmas 3x2x1x0vox Resample image to some target image space (images are in register) \u00b6 You don't have to produce the identity matrix externally. When you type theantsApplyTransforms command, simply use the word \"identity\" for your transform, i.e. antsApplyTransforms ... -t identity Resample image to some target resolution (in mm) \u00b6 ResampleImageBySpacing 3 input_image output_image x y z 0 0 0 Combine several warps \u00b6 Although you can stack several transforms in \"antsApplyTransforms\", it may also be useful to combine several transforms in a warp file. antsApplyTransforms -d 3 \\ -i input -r ref \\ -n inter \\ -t warp2 \\ -t aff2 \\ -t warp1 \\ -t aff1 \\ -o [combinedWarp,1] ImageMath \u00b6 CreateWarpedGridImage \u00b6 ThresholdImage \u00b6 PrintHeader \u00b6 Print image header.","title":"ANTS Howto"},{"location":"howtos/ants_howto/#ants-howto","text":"","title":"ANTS Howto"},{"location":"howtos/ants_howto/#apply-forward-transform","text":"AA> $A \\rightarrow B$ $$ A \\rightarrow B $$ and $$ \\require{AMScd} \\begin{CD} A @>a>> B\\ @V b V V= @VV c V\\ C @>>d> D \\end{CD} $$ antsRegistrationSyNQuick.sh -d 3 \\ -f B.nii.gz \\ -m A.nii.gz \\ -o RegA2B antsApplyTransforms -d 3 \\ -i A.nii.gz \\ -o ADeformed.nii.gz \\ -r B.nii.gz \\ -t RegA2B1Warp.nii.gz \\ -t RegA2B0GenericAffine.mat","title":"Apply forward transform"},{"location":"howtos/ants_howto/#apply-inverse-transform","text":"Note reversed order and special notation for affine part! antsRegistrationSyNQuick.sh -d 3 \\ -f B.nii.gz \\ -m A.nii.gz \\ -o RegA2B antsApplyTransforms -d 3 \\ -i B.nii.gz \\ -o BDeformed.nii.gz \\ -r A.nii.gz \\ -t [RegA2B0GenericAffine.mat,1] \\ -t RegA2B1InverseWarp.nii.gz","title":"Apply inverse transform"},{"location":"howtos/ants_howto/#apply-multiple-transforms","text":"Several transforms can be \"stacked\" in the call to 'antsApplyTransforms'. Transforms will be applied in reverse order of what is specified in the command. Example : A -> B + B -> C antsApplyTransforms -d 3 \\ -i A.nii.gz \\ -o A_to_C.nii.gz \\ -r C.nii.gz \\ -t BtoC_1Warp.nii.gz \\ -t BtoC_0GenericAffine.mat \\ -t AtoB_1Warp.nii.gz \\ -t AtoB_0GenericAffine.mat","title":"Apply multiple transforms"},{"location":"howtos/ants_howto/#full-antsregistation-call","text":"Rigid body antsRegistration --verbose 1\\ --dimensionality 3\\ --float 0\\ --output [${warpName}] \\ --interpolation Linear \\ --use-histogram-matching 0 \\ --winsorize-image-intensities [0.005,0.995]\\ --initial-moving-transform [${target},${moving},1]\\ --transform Rigid[0.1]\\ --metric MI[${target},${moving},1,32,Regular,0.25]\\ --convergence [1000x500x250x10,1e-6,10]\\ --shrink-factors 8x4x2x1\\ --smoothing-sigmas 3x2x1x0vox SyN antsRegistration --verbose 1\\ --dimensionality 3\\ --float 0\\ --output [${warpName},${warpName}Warped.nii.gz,${warpName}InverseWarped.nii.gz]\\ --interpolation Linear\\ --use-histogram-matching 0\\ --winsorize-image-intensities [0.005,0.995]\\ --initial-moving-transform [${target},${moving},1]\\ --transform Rigid[0.1]\\ --metric MI[${target},${moving},1,32,Regular,0.25]\\ --convergence [1000x500x250x10,1e-6,10]\\ --shrink-factors 8x4x2x1\\ --smoothing-sigmas 3x2x1x0vox\\ --transform Affine[0.1]\\ --metric MI[${target},${moving},1,32,Regular,0.25]\\ --convergence [1000x500x250x10,1e-6,10]\\ --shrink-factors 8x4x2x1\\ --smoothing-sigmas 3x2x1x0vox\\ --transform SyN[0.1,3,0]\\ --metric MI[${target},${moving},1,32]\\ --convergence [100x70x50x10,1e-6,10]\\ --shrink-factors 8x4x2x1\\ --smoothing-sigmas 3x2x1x0vox","title":"Full antsRegistation call"},{"location":"howtos/ants_howto/#resample-image-to-some-target-image-space-images-are-in-register","text":"You don't have to produce the identity matrix externally. When you type theantsApplyTransforms command, simply use the word \"identity\" for your transform, i.e. antsApplyTransforms ... -t identity","title":"Resample image to some target image space (images are in register)"},{"location":"howtos/ants_howto/#resample-image-to-some-target-resolution-in-mm","text":"ResampleImageBySpacing 3 input_image output_image x y z 0 0 0","title":"Resample image to some target resolution (in mm)"},{"location":"howtos/ants_howto/#combine-several-warps","text":"Although you can stack several transforms in \"antsApplyTransforms\", it may also be useful to combine several transforms in a warp file. antsApplyTransforms -d 3 \\ -i input -r ref \\ -n inter \\ -t warp2 \\ -t aff2 \\ -t warp1 \\ -t aff1 \\ -o [combinedWarp,1]","title":"Combine several warps"},{"location":"howtos/ants_howto/#imagemath","text":"","title":"ImageMath"},{"location":"howtos/ants_howto/#createwarpedgridimage","text":"","title":"CreateWarpedGridImage"},{"location":"howtos/ants_howto/#thresholdimage","text":"","title":"ThresholdImage"},{"location":"howtos/ants_howto/#printheader","text":"Print image header.","title":"PrintHeader"},{"location":"howtos/freesurfer_howto/","text":"FreeSurfer Howto \u00b6 Recon all \u00b6 export SUBJECTS_DIR = xx recon-all -i t1w -all -subjid subj-name You can also call recon-all without setting SUBJECTS_DIR recon-all -i t1w -all -subjid subj-name -sd SUBJECTS_DIR Table of subcortical segmentation \u00b6 asegstats2table --subjects bert ernie fred margaret \\ --meas volume \\ --tablefile aseg_stats.txt Note : Use -d comma to write the tablefile as a csv file Table of cortical segmentation \u00b6 Note * aparc = Desikan-Killiany Atlas (default) * aparc.a2009s = Destrieux Atlas aparcstats2table --hemi lh \\ --subjects 004 021 040 067 080 092 \\ --meas thickness \\ --parc aparc \\ --tablefile lh.aparc.a2009.thickness.table Table of white matter parcellation volumes \u00b6 asegstats2table \\ --subjects 004 021 040 067 080 092 \\ --segno 3007 3021 3022 4022 \\ --stats wmparc.stats \\ --tablefile wmparc.vol.table mris_anatomical_stats ?? Convert FreeSurfer mgz to nii \u00b6 Reference space = 001.mgz File to convert = aseg.mgz mri_convert -rl 001 .mgz -rt nearest aseg.mgz aseg_nii.nii.gz","title":"FreeSurfer Howto"},{"location":"howtos/freesurfer_howto/#freesurfer-howto","text":"","title":"FreeSurfer Howto"},{"location":"howtos/freesurfer_howto/#recon-all","text":"export SUBJECTS_DIR = xx recon-all -i t1w -all -subjid subj-name You can also call recon-all without setting SUBJECTS_DIR recon-all -i t1w -all -subjid subj-name -sd SUBJECTS_DIR","title":"Recon all"},{"location":"howtos/freesurfer_howto/#table-of-subcortical-segmentation","text":"asegstats2table --subjects bert ernie fred margaret \\ --meas volume \\ --tablefile aseg_stats.txt Note : Use -d comma to write the tablefile as a csv file","title":"Table of subcortical segmentation"},{"location":"howtos/freesurfer_howto/#table-of-cortical-segmentation","text":"Note * aparc = Desikan-Killiany Atlas (default) * aparc.a2009s = Destrieux Atlas aparcstats2table --hemi lh \\ --subjects 004 021 040 067 080 092 \\ --meas thickness \\ --parc aparc \\ --tablefile lh.aparc.a2009.thickness.table","title":"Table of cortical segmentation"},{"location":"howtos/freesurfer_howto/#table-of-white-matter-parcellation-volumes","text":"asegstats2table \\ --subjects 004 021 040 067 080 092 \\ --segno 3007 3021 3022 4022 \\ --stats wmparc.stats \\ --tablefile wmparc.vol.table mris_anatomical_stats ??","title":"Table of white matter parcellation volumes"},{"location":"howtos/freesurfer_howto/#convert-freesurfer-mgz-to-nii","text":"Reference space = 001.mgz File to convert = aseg.mgz mri_convert -rl 001 .mgz -rt nearest aseg.mgz aseg_nii.nii.gz","title":"Convert FreeSurfer mgz to nii"}]}